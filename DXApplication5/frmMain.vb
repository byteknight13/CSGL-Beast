Imports System.ComponentModel
Imports System.Text
Imports DevExpress.XtraBars.Alerter
Imports System.Data.OleDb

Partial Public Class frmMain
    Inherits DevExpress.XtraEditors.XtraForm

    Public sTeamOne As String = String.Empty
    Public sTeamTwo As String = String.Empty
    Public dtAll As New DataTable
    Public WriteOnly Property GrdMatchesDataSource As DataTable
        Set(value As DataTable)
            grdMatches.DataSource = value
        End Set
    End Property

    Public WriteOnly Property ReposTeamsDataSource As List(Of String)
        Set(value As List(Of String))
            ReposTeamOne.DataSource = value
            ReposTeamTwo.DataSource = value
        End Set
    End Property



    Shared Sub New()
        DevExpress.UserSkins.BonusSkins.Register()
        DevExpress.Skins.SkinManager.EnableFormSkins()
        ' This line of code is generated by Data Source Configuration Wizard
    End Sub
    Public Sub New()
        InitializeComponent()
    End Sub

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load

    End Sub

    Private Sub mnuHelp_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuHelp.ItemClick
        ShowAlert("Help", "Right click on a column header to show many options, including a very advanced filter control.", Me)
    End Sub

    Private Sub mnuReload_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuReload.ItemClick
        'Try
        If Not System.IO.File.Exists(Application.StartupPath & "\data\matches.csg") Then System.IO.File.Create(Application.StartupPath & "\data\matches.csg")
        Dim filewriter As New System.IO.StreamWriter(Application.StartupPath & "\data\matches.csg")
        Dim websrc As New System.Net.WebClient()

        filewriter.WriteAsync(websrc.DownloadString("http://csgolounge.com/api/matches.php"))
        Dim dt As DataTable = JSONToDataTable("http://csgolounge.com/api/matches.php", False)
        If Not (dt Is Nothing) Then
            grdMatches.DataSource = dt
            Debug.WriteLine("DT Rows: " & dt.Rows.Count)
        End If

        FormatGridViewCells() 'Change several original values to values that are more visuall appealing
        Dim lst As New List(Of String)

        GridView1.ActiveFilterString = String.Empty
        For i = 0 To GridView1.RowCount - 1 'Begin loop to change winner from Team 1/Team 2 to the actual team name
            lst.Add(GridView1.GetRowCellDisplayText(i, "Team 1").ToString)
            lst.Add(GridView1.GetRowCellDisplayText(i, "Team 2").ToString)
        Next
        GridView1.BestFitColumns() 'fit all the columns
        lst = lst.Distinct.ToList() 'Remove duplicates
        lst.Sort()
        If lst.Count <> 0 Then lst.RemoveAt(0)
        ReposTeamOne.DataSource = lst
        ReposTeamTwo.DataSource = lst
        filewriter.Close()
        filewriter.Dispose()
        websrc.Dispose()
        dtAll = dt

        'Catch ex As Exception
        'MsgBox(ex.Message)
        ' End Try
    End Sub

    Private Sub BarButtonItem1_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem1.ItemClick
        frmPlayerStats.Show()
    End Sub

    Private Sub mnuExportToXL_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuExportToXL.ItemClick
        Dim fd As New SaveFileDialog
        fd.Filter = "*.xlsx|.xlsx"
        If fd.ShowDialog = Windows.Forms.DialogResult.OK Then
            grdMatches.ExportToXlsx(fd.FileName)
        End If

    End Sub

    Private Sub mnuExportToPDF_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuExportToPDF.ItemClick
        Dim fd As New SaveFileDialog
        fd.Filter = "*.pdf|.pdf"
        If fd.ShowDialog = Windows.Forms.DialogResult.OK Then
            grdMatches.ExportToPdf(fd.FileName)
        End If

    End Sub

    Private Sub BarButtonItem2_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem2.ItemClick
        frmItems.Show()
    End Sub

    Private Sub BarEditItem1_EditValueChanged(sender As Object, e As EventArgs) Handles mnuTeamOneBox.EditValueChanged
        sTeamOne = BarManager1.ActiveEditor.EditValue.ToString
        Debug.WriteLine(String.Format("Team One: {0}", sTeamOne))
    End Sub

    Private Sub mnuTeamTwoBox_EditValueChanged(sender As Object, e As EventArgs) Handles mnuTeamTwoBox.EditValueChanged
        sTeamTwo = BarManager1.ActiveEditor.EditValue.ToString
        Debug.WriteLine(String.Format("Team Two: {0}", sTeamTwo))
    End Sub

    Private Sub mnuFilter_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuFilter.ItemClick
        Try

            GrdMatchesDataSource = dtAll
            dtAll = DirectCast(grdMatches.DataSource, DataTable)
            Dim newdt As New DataTable
            newdt = dtAll.Clone
            newdt.Rows.Clear()
            Dim qry As String = String.Format("([Team 1] = '{0}' AND [Team 2] = '{1}') OR ([Team 1] = '{1}' AND [Team 2] = '{0}')", sTeamOne, sTeamTwo)
            'Dim qry As String = String.Format("[Team 1] = '{0}'", sTeamOne)
            Dim result() As DataRow = dtAll.Select(qry)
            For Each row In result
                newdt.ImportRow(row)
            Next
            grdMatches.DataSource = newdt
        Catch ex As Exception
            Debug.WriteLine(ex.Message)
        End Try
    End Sub

    Private Sub mnuClearFilter_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuClearFilter.ItemClick
        'If MsgBox("Are you sure you wish to clear all filters?", MsgBoxStyle.YesNo, "Are you sure?") = MsgBoxResult.Yes Then
        grdMatches.DataSource = dtAll
        'End If
    End Sub

    Private Sub mnuAdvancedFilter_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuAdvancedFilter.ItemClick
        GridView1.ShowFilterEditor(Nothing)
    End Sub

    Private Sub BarButtonItem3_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles mnuExportExcel.ItemClick
        Dim fd As New SaveFileDialog
        fd.Filter = "*.xlsx|.xlsx"
        If fd.ShowDialog = Windows.Forms.DialogResult.OK Then
            grdMatches.ExportToXlsx(fd.FileName)
        End If
    End Sub

    Private Sub lblTotalMatches_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles lblTotalMatches.ItemClick

    End Sub

    Private Sub tmrStatusLabel_Tick(sender As Object, e As EventArgs) Handles tmrStatusLabel.Tick
        lblTotalMatches.Caption = String.Format("Total Matches In List: {0}", GridView1.RowCount)
    End Sub
End Class
